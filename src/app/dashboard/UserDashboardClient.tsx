"use client";

import { motion } from "framer-motion";
import Link from "next/link";
import { useState, useCallback } from "react";
import { CorporateStoryView } from "@/components/quiz/CorporateStoryView";

interface User {
  name?: string | null;
  email?: string | null;
  image?: string | null;
  role?: string;
  isAlphaOmega?: boolean;
}

interface UserDashboardClientProps {
  user: User;
}

export function UserDashboardClient({ user }: UserDashboardClientProps) {
  const isAlphaOmega = user.isAlphaOmega;
  const [selectedStory, setSelectedStory] = useState<any>(null);
  const [isStoryOpen, setIsStoryOpen] = useState(false);
  const [historyFilter, setHistoryFilter] = useState<'all' | string>('all');
  const [categoryFilter, setCategoryFilter] = useState<'all' | '‰∏ÄËà¨ÊïôÈ§ä' | 'Â∞ÇÈñÄ'>('all');
  const [typeFilter, setTypeFilter] = useState<'all' | 'ÊôÆÈÅçÁöÑ' | '„Éà„É¨„É≥„Éâ'>('all');
  const [expandedHistory, setExpandedHistory] = useState<number | null>(null);
  const [showFilters, setShowFilters] = useState(false);

  // ‰ºÅÊ•≠„Çπ„Éà„Éº„É™„Éº„Éá„Éº„Çø
  const corporateStories = [
    {
      id: "shops-1",
      company: "shops",
      logo: "m",
      banner: "shops-banner",
      title: "Shops Êñ∞ÂïÜÂìÅ„ÇØ„Ç§„Ç∫",
      description: "ÊúÄÊñ∞„ÅÆÂïÜÂìÅÁü•Ë≠ò„Çí„ÉÜ„Çπ„Éà„Åó„Å¶„ÄÅ„Ç∑„Éß„ÉÉ„Éî„É≥„Ç∞„ÅÆÈÅî‰∫∫„Å´„Å™„Çç„ÅÜÔºÅ",
      quizType: "Êñ∞ÂïÜÂìÅ„ÇØ„Ç§„Ç∫",
      timePosted: "2ÊôÇÈñìÂâç",
      isNew: true
    },
    {
      id: "rakuten-1",
      company: "rakuten",
      logo: "R",
      banner: "rakuten-banner",
      title: "Rakuten „Éù„Ç§„É≥„Éà„ÇØ„Ç§„Ç∫",
      description: "Ê•ΩÂ§©„Éù„Ç§„É≥„Éà„ÅÆ‰Ωø„ÅÑÊñπ„Å®„ÅäÂæó„Å™ÊÉÖÂ†±„ÇíÂ≠¶„Åº„ÅÜÔºÅ",
      quizType: "„Éù„Ç§„É≥„Éà„ÇØ„Ç§„Ç∫",
      timePosted: "4ÊôÇÈñìÂâç"
    },
    {
      id: "amazon-1",
      company: "amazon",
      logo: "a",
      banner: "amazon-banner",
      title: "Amazon EC„ÇØ„Ç§„Ç∫",
      description: "E„Ç≥„Éû„Éº„Çπ„ÅÆÂü∫Á§éÁü•Ë≠ò„Å®Amazon„ÅÆ„Çµ„Éº„Éì„Çπ„ÇíÁêÜËß£„Åó„Çà„ÅÜÔºÅ",
      quizType: "EC„ÇØ„Ç§„Ç∫",
      timePosted: "6ÊôÇÈñìÂâç"
    },
    {
      id: "ca-1",
      company: "ca_tech",
      logo: "CA",
      banner: "ca-banner",
      title: "CA „ÉÜ„ÉÉ„ÇØ„ÇØ„Ç§„Ç∫",
      description: "ÊúÄÊñ∞„ÅÆ„ÉÜ„ÇØ„Éé„É≠„Ç∏„Éº„Éà„É¨„É≥„Éâ„Å®ÊäÄË°ìÁü•Ë≠ò„Çí„ÉÜ„Çπ„ÉàÔºÅ",
      quizType: "„ÉÜ„ÉÉ„ÇØ„ÇØ„Ç§„Ç∫",
      timePosted: "1ÊôÇÈñìÂâç",
      isLive: true
    }
  ];

  const handleStoryClick = (story: any) => {
    setSelectedStory(story);
    setIsStoryOpen(true);
  };

  const handleCloseStory = useCallback(() => {
    setIsStoryOpen(false);
    setSelectedStory(null);
  }, []);

  const handleStartQuiz = useCallback((storyId: string) => {
    console.log(`Starting quiz for story: ${storyId}`);
    // „Åì„Åì„Åß„ÇØ„Ç§„Ç∫„Éö„Éº„Ç∏„Å´ÈÅ∑Áßª„Åô„ÇãÂá¶ÁêÜ„ÇíËøΩÂä†
    handleCloseStory();
  }, [handleCloseStory]);

  const cardVariants = {
    hidden: { opacity: 0, y: 20 },
    visible: { 
      opacity: 1, 
      y: 0,
      transition: { duration: 0.4, ease: "easeOut" as const }
    }
  };

  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.1,
        delayChildren: 0.2
      }
    }
  };

  const stats = [
    { title: "ÂÆå‰∫Ü„Åó„Åü„ÇØ„Ç§„Ç∫", value: "3", icon: "üìö", color: "bg-blue-500" },
    { title: "Âπ≥Âùá„Çπ„Ç≥„Ç¢", value: "85%", icon: "üìä", color: "bg-green-500" },
    { title: "Â≠¶ÁøíÊôÇÈñì", value: "2.5ÊôÇÈñì", icon: "‚è±Ô∏è", color: "bg-purple-500" },
    { title: "Áç≤Âæó„Éù„Ç§„É≥„Éà", value: "1,250", icon: "üèÜ", color: "bg-yellow-500" },
  ];

  // ÈÄ£Á∂öËß£Á≠îÊó•Êï∞„Å®ÁöÜÂã§„Éú„Éº„Éä„Çπ„Éá„Éº„Çø
  const streakData = {
    currentStreak: 7,
    longestStreak: 15,
    totalDays: 25,
    bonusPoints: 500,
    nextBonus: 1000,
    daysToNextBonus: 3,
    weeklyProgress: 5 // ‰ªäÈÄ±ÂÆå‰∫Ü„Åó„ÅüÊó•Êï∞ÔºàÊúà„ÄúÈáë„ÅÆ5Êó•ÈñìÔºâ
  };

  // „Éá„Éê„ÉÉ„Ç∞Áî®: ÈÄ±Èñì„Éó„É≠„Ç∞„É¨„Çπ„ÅÆÂÄ§„ÇíÁ¢∫Ë™ç
  console.log('Weekly Progress Debug:', {
    currentStreak: streakData.currentStreak,
    weeklyProgress: streakData.weeklyProgress,
    calculation: streakData.currentStreak % 7
  });

  // „ÇØ„Ç§„Ç∫Â±•Ê≠¥„ÅÆ„ÉÄ„Éü„Éº„Éá„Éº„Çø
  const quizHistory = [
    {
      id: 1,
      category: "„ÉÜ„ÇØ„Éé„É≠„Ç∏„Éº",
      genre: "AI„ÉªÊ©üÊ¢∞Â≠¶Áøí",
      aiCategory: "Â∞ÇÈñÄ" as const,
      aiType: "„Éà„É¨„É≥„Éâ" as const,
      confidence: 0.95,
      date: "2024-01-15",
      time: "14:30",
      score: 85,
      questions: [
        {
          question: "Ê©üÊ¢∞Â≠¶Áøí„Å´„Åä„Åë„ÇãÈÅéÂ≠¶Áøí„Å®„ÅØ‰Ωï„Åß„Åô„ÅãÔºü",
          userAnswer: "„É¢„Éá„É´„ÅåË®ìÁ∑¥„Éá„Éº„Çø„Å´ÈÅéÂ∫¶„Å´ÈÅ©Âøú„Åô„Çã„Åì„Å®",
          correctAnswer: "„É¢„Éá„É´„ÅåË®ìÁ∑¥„Éá„Éº„Çø„Å´ÈÅéÂ∫¶„Å´ÈÅ©Âøú„Åô„Çã„Åì„Å®",
          isCorrect: true
        },
        {
          question: "„Éá„Ç£„Éº„Éó„É©„Éº„Éã„É≥„Ç∞„Åß‰ΩøÁî®„Åï„Çå„ÇãÊ¥ªÊÄßÂåñÈñ¢Êï∞„ÅØ„Å©„Çå„Åß„Åô„ÅãÔºü",
          userAnswer: "ReLU",
          correctAnswer: "ReLU",
          isCorrect: true
        },
        {
          question: "„Éê„ÉÉ„ÇØ„Éó„É≠„Éë„Ç≤„Éº„Ç∑„Éß„É≥„ÅÆÁõÆÁöÑ„ÅØ‰Ωï„Åß„Åô„ÅãÔºü",
          userAnswer: "Èáç„Åø„ÅÆÊõ¥Êñ∞",
          correctAnswer: "Ë™§Â∑Æ„ÅÆÈÄÜ‰ºùÊí≠„Å´„Çà„ÇãÈáç„Åø„ÅÆÊúÄÈÅ©Âåñ",
          isCorrect: false
        }
      ]
    },
    {
      id: 2,
      category: "„Éì„Ç∏„Éç„Çπ",
      genre: "„Éû„Éº„Ç±„ÉÜ„Ç£„É≥„Ç∞",
      aiCategory: "Â∞ÇÈñÄ" as const,
      aiType: "ÊôÆÈÅçÁöÑ" as const,
      confidence: 0.88,
      date: "2024-01-14",
      time: "10:15",
      score: 92,
      questions: [
        {
          question: "4P„Éû„Éº„Ç±„ÉÜ„Ç£„É≥„Ç∞„Éü„ÉÉ„ÇØ„Çπ„Å´Âê´„Åæ„Çå„Å™„ÅÑ„ÇÇ„ÅÆ„ÅØ„Å©„Çå„Åß„Åô„ÅãÔºü",
          userAnswer: "People",
          correctAnswer: "People",
          isCorrect: true
        },
        {
          question: "„Éñ„É©„É≥„Éâ„Ç®„ÇØ„Ç§„ÉÜ„Ç£„Å®„ÅØ‰Ωï„Åß„Åô„ÅãÔºü",
          userAnswer: "„Éñ„É©„É≥„Éâ„ÅÆË≥áÁî£‰æ°ÂÄ§",
          correctAnswer: "„Éñ„É©„É≥„Éâ„ÅÆË≥áÁî£‰æ°ÂÄ§",
          isCorrect: true
        }
      ]
    },
    {
      id: 3,
      category: "Á§æ‰ºö„ÉªÊñáÂåñ",
      genre: "ÊôÇ‰∫ãÂïèÈ°å",
      aiCategory: "‰∏ÄËà¨ÊïôÈ§ä" as const,
      aiType: "„Éà„É¨„É≥„Éâ" as const,
      confidence: 0.92,
      date: "2024-01-13",
      time: "16:45",
      score: 78,
      questions: [
        {
          question: "2024Âπ¥„ÅÆ‰∏ªË¶Å„Å™ÂõΩÈöõ‰ºöË≠∞„ÅØ„Å©„Çå„Åß„Åô„ÅãÔºü",
          userAnswer: "G7„Çµ„Éü„ÉÉ„Éà",
          correctAnswer: "G20„Çµ„Éü„ÉÉ„Éà",
          isCorrect: false
        },
        {
          question: "ÊúÄËøë„ÅÆÁí∞Â¢ÉÊîøÁ≠ñ„ÅßÊ≥®ÁõÆ„Åï„Çå„Å¶„ÅÑ„Çã„ÅÆ„ÅØÔºü",
          userAnswer: "„Ç´„Éº„Éú„É≥„Éã„É•„Éº„Éà„É©„É´",
          correctAnswer: "„Ç´„Éº„Éú„É≥„Éã„É•„Éº„Éà„É©„É´",
          isCorrect: true
        }
      ]
    },
    {
      id: 4,
      category: "„Éí„É•„Éº„Éû„É≥„Çπ„Ç≠„É´",
      genre: "„Ç≥„Éü„É•„Éã„Ç±„Éº„Ç∑„Éß„É≥",
      aiCategory: "‰∏ÄËà¨ÊïôÈ§ä" as const,
      aiType: "ÊôÆÈÅçÁöÑ" as const,
      confidence: 0.91,
      date: "2024-01-12",
      time: "13:20",
      score: 88,
      questions: [
        {
          question: "ÂäπÊûúÁöÑ„Å™„Éó„É¨„Çº„É≥„ÉÜ„Éº„Ç∑„Éß„É≥„ÅÆË¶ÅÁ¥†„ÅØÔºü",
          userAnswer: "ÊòéÁ¢∫„Å™ÊßãÊàê„Å®Ë¶ñË¶öÁöÑË≥áÊñô",
          correctAnswer: "ÊòéÁ¢∫„Å™ÊßãÊàê„Å®Ë¶ñË¶öÁöÑË≥áÊñô",
          isCorrect: true
        },
        {
          question: "„Ç¢„ÇØ„ÉÜ„Ç£„Éñ„É™„Çπ„Éã„É≥„Ç∞„Å®„ÅØ‰Ωï„Åß„Åô„ÅãÔºü",
          userAnswer: "Á©çÊ•µÁöÑ„Å´Áõ∏Êâã„ÅÆË©±„ÇíËÅû„Åè„Åì„Å®",
          correctAnswer: "Á©çÊ•µÁöÑ„Å´Áõ∏Êâã„ÅÆË©±„ÇíËÅû„Åè„Åì„Å®",
          isCorrect: true
        }
      ]
    },
    {
      id: 5,
      category: "„ÉÜ„ÇØ„Éé„É≠„Ç∏„Éº",
      genre: "„Çª„Ç≠„É•„É™„ÉÜ„Ç£",
      aiCategory: "Â∞ÇÈñÄ" as const,
      aiType: "„Éà„É¨„É≥„Éâ" as const,
      confidence: 0.89,
      date: "2024-01-11",
      time: "11:30",
      score: 75,
      questions: [
        {
          question: "„Çº„É≠„Éà„É©„Çπ„Éà„Çª„Ç≠„É•„É™„ÉÜ„Ç£„ÅÆÂü∫Êú¨Ê¶ÇÂøµ„ÅØÔºü",
          userAnswer: "„Åô„Åπ„Å¶„Çí‰ø°È†º„Åó„Å™„ÅÑ",
          correctAnswer: "„Åô„Åπ„Å¶„Çí‰ø°È†º„Åó„Å™„ÅÑ",
          isCorrect: true
        },
        {
          question: "Â§öË¶ÅÁ¥†Ë™çË®º„Åß‰ΩøÁî®„Åï„Çå„Çã„ÇÇ„ÅÆ„ÅØÔºü",
          userAnswer: "„Éë„Çπ„ÉØ„Éº„Éâ„Å®SMS",
          correctAnswer: "„Éë„Çπ„ÉØ„Éº„Éâ„ÄÅÁîü‰ΩìË™çË®º„ÄÅ„Éà„Éº„ÇØ„É≥",
          isCorrect: false
        }
      ]
    },
    {
      id: 6,
      category: "Á§æ‰ºö„ÉªÊñáÂåñ",
      genre: "Ê≠¥Âè≤",
      aiCategory: "‰∏ÄËà¨ÊïôÈ§ä" as const,
      aiType: "ÊôÆÈÅçÁöÑ" as const,
      confidence: 0.96,
      date: "2024-01-10",
      time: "15:10",
      score: 94,
      questions: [
        {
          question: "ÊòéÊ≤ªÁ∂≠Êñ∞„ÅåËµ∑„Åì„Å£„ÅüÂπ¥„ÅØÔºü",
          userAnswer: "1868Âπ¥",
          correctAnswer: "1868Âπ¥",
          isCorrect: true
        },
        {
          question: "Ê±üÊà∏ÊôÇ‰ª£„ÅÆË∫´ÂàÜÂà∂Â∫¶„ÅÆÂêçÁß∞„ÅØÔºü",
          userAnswer: "Â£´Ëæ≤Â∑•ÂïÜ",
          correctAnswer: "Â£´Ëæ≤Â∑•ÂïÜ",
          isCorrect: true
        }
      ]
    }
  ];

  // „Éï„Ç£„É´„Çø„É™„É≥„Ç∞„Åï„Çå„ÅüÂ±•Ê≠¥„Éá„Éº„Çø
  const filteredHistory = quizHistory.filter(history => {
    const categoryMatch = historyFilter === 'all' || history.category === historyFilter;
    const aiCategoryMatch = categoryFilter === 'all' || history.aiCategory === categoryFilter;
    const aiTypeMatch = typeFilter === 'all' || history.aiType === typeFilter;
    return categoryMatch && aiCategoryMatch && aiTypeMatch;
  });

  // AIÂàÜÈ°û„ÅÆÁµ±Ë®à„Éá„Éº„Çø
  const aiStats = {
    total: quizHistory.length,
    generalKnowledge: quizHistory.filter(h => h.aiCategory === '‰∏ÄËà¨ÊïôÈ§ä').length,
    specialized: quizHistory.filter(h => h.aiCategory === 'Â∞ÇÈñÄ').length,
    universal: quizHistory.filter(h => h.aiType === 'ÊôÆÈÅçÁöÑ').length,
    trend: quizHistory.filter(h => h.aiType === '„Éà„É¨„É≥„Éâ').length,
    averageConfidence: (quizHistory.reduce((sum, h) => sum + h.confidence, 0) / quizHistory.length * 100).toFixed(1)
  };

  const availableQuizzes = [
    { 
      title: "„Éì„Ç∏„Éç„Çπ", 
      description: "ÁµåÂñ∂Êà¶Áï•„ÄÅ„Éû„Éº„Ç±„ÉÜ„Ç£„É≥„Ç∞„ÄÅË≤°ÂãôÁÆ°ÁêÜ",
      questions: 45,
      difficulty: "‰∏≠Á¥ö",
      icon: "üíº",
      color: "from-blue-500 to-blue-600",
      category: "„Éì„Ç∏„Éç„Çπ",
      genres: ["Êà¶Áï•„Éª‰ºÅÁîª", "„Éû„Éº„Ç±„ÉÜ„Ç£„É≥„Ç∞", "Ë≤°Âãô„Éª‰ºöË®à", "„Éó„É≠„Ç∏„Çß„ÇØ„ÉàÁÆ°ÁêÜ", "Âñ∂Ê•≠„ÉªË≤©Â£≤", "‰∫∫‰∫ã„ÉªÂä¥Âãô"]
    },
    { 
      title: "Á§æ‰ºö„ÉªÊñáÂåñ", 
      description: "ÊôÇ‰∫ãÂïèÈ°å„ÄÅÊ≠¥Âè≤„ÄÅÊñáÂ≠¶„ÄÅËä∏Ë°ì",
      questions: 38,
      difficulty: "ÂàùÁ¥ö",
      icon: "üåç",
      color: "from-green-500 to-green-600",
      category: "Á§æ‰ºö„ÉªÊñáÂåñ",
      genres: ["ÊôÇ‰∫ãÂïèÈ°å", "Ê≠¥Âè≤", "ÊñáÂ≠¶„ÉªËä∏Ë°ì", "Á§æ‰ºöÂà∂Â∫¶", "ÂõΩÈöõÈñ¢‰øÇ"]
    },
    { 
      title: "„ÉÜ„ÇØ„Éé„É≠„Ç∏„Éº", 
      description: "AI„ÉªML„ÄÅ„Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞„ÄÅ„ÇØ„É©„Ç¶„Éâ",
      questions: 52,
      difficulty: "‰∏äÁ¥ö",
      icon: "üöÄ",
      color: "from-purple-500 to-purple-600",
      category: "„ÉÜ„ÇØ„Éé„É≠„Ç∏„Éº",
      genres: ["AI„ÉªÊ©üÊ¢∞Â≠¶Áøí", "„Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞", "„ÇØ„É©„Ç¶„Éâ", "„Çª„Ç≠„É•„É™„ÉÜ„Ç£", "„Éá„Éº„Çø„Éô„Éº„Çπ", "„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ", "WebÈñãÁô∫"]
    },
    { 
      title: "„Éí„É•„Éº„Éû„É≥„Çπ„Ç≠„É´", 
      description: "„Ç≥„Éü„É•„Éã„Ç±„Éº„Ç∑„Éß„É≥„ÄÅ„É™„Éº„ÉÄ„Éº„Ç∑„ÉÉ„Éó",
      questions: 35,
      difficulty: "‰∏≠Á¥ö",
      icon: "ü§ù",
      color: "from-orange-500 to-orange-600",
      category: "„Éí„É•„Éº„Éû„É≥„Çπ„Ç≠„É´",
      genres: ["„Ç≥„Éü„É•„Éã„Ç±„Éº„Ç∑„Éß„É≥", "„É™„Éº„ÉÄ„Éº„Ç∑„ÉÉ„Éó", "„ÉÅ„Éº„É†„ÉØ„Éº„ÇØ", "ÂïèÈ°åËß£Ê±∫", "‰∫§Ê∏âË°ì"]
    }
  ];

  return (
    <div className="max-w-7xl mx-auto py-8 px-4 sm:px-6 lg:px-8">
      <motion.div
        variants={containerVariants}
        initial="hidden"
        animate="visible"
        className="space-y-8"
      >


        {/* Compact & Readable Streak & Bonus Section */}
        <motion.div 
          variants={cardVariants}
          className="bg-gradient-to-br from-orange-400 via-red-500 to-pink-500 rounded-2xl p-5 shadow-xl border border-orange-300"
        >
          {/* Main Content Row */}
          <div className="flex items-center justify-between mb-4">
            {/* Left: Streak Info with Better Typography */}
            <div className="flex items-center space-x-4">
              <motion.div
                initial={{ scale: 0, rotate: -180 }}
                animate={{ scale: 1, rotate: 0 }}
                transition={{ 
                  type: "spring", 
                  stiffness: 200, 
                  damping: 10,
                  delay: 0.2
                }}
                className="w-12 h-12 bg-white bg-opacity-25 rounded-full flex items-center justify-center shadow-lg"
              >
                <span className="text-xl">üî•</span>
              </motion.div>
              <div className="space-y-1">
                <motion.div
                  initial={{ opacity: 0, x: -20 }}
                  animate={{ opacity: 1, x: 0 }}
                  transition={{ delay: 0.4 }}
                  className="text-2xl font-bold text-white drop-shadow-sm"
                >
                  {streakData.currentStreak}Êó•ÈÄ£Á∂ö
                </motion.div>
                <motion.div
                  initial={{ opacity: 0, x: -20 }}
                  animate={{ opacity: 1, x: 0 }}
                  transition={{ delay: 0.6 }}
                  className="text-orange-100 text-sm font-medium"
                >
                  ÊúÄÈ´òË®òÈå≤: {streakData.longestStreak}Êó•
                </motion.div>
              </div>
            </div>
            
            {/* Right: Bonus Points with Enhanced Visibility */}
            <motion.div
              initial={{ opacity: 0, scale: 0.8 }}
              animate={{ opacity: 1, scale: 1 }}
              transition={{ delay: 0.8 }}
              className="text-center"
            >
              <div className="bg-white bg-opacity-25 backdrop-blur-sm rounded-xl px-4 py-3 shadow-lg border border-white border-opacity-30">
                <div className="text-lg font-bold text-white drop-shadow-sm">+{streakData.bonusPoints}</div>
                <div className="text-orange-100 text-sm font-medium">„Éú„Éº„Éä„Çπ</div>
              </div>
            </motion.div>
          </div>

          {/* Weekly Progress with Better Spacing */}
          <motion.div
            initial={{ opacity: 0, y: 10 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 1.0 }}
            className="mb-4"
          >
            <div className="flex justify-between items-center">
              <span className="text-white text-sm font-medium">‰ªäÈÄ±„ÅÆÈÄ≤Êçó:</span>
              <div className="flex space-x-2">
                {['Êúà', 'ÁÅ´', 'Ê∞¥', 'Êú®', 'Èáë', 'Âúü', 'Êó•'].map((day, index) => (
                  <motion.div
                    key={day}
                    initial={{ scale: 0 }}
                    animate={{ scale: 1 }}
                    transition={{ delay: 1.2 + index * 0.05 }}
                    className={`w-7 h-7 rounded-full flex items-center justify-center text-xs font-bold shadow-md ${
                      index < streakData.weeklyProgress 
                        ? 'bg-white text-red-600 shadow-lg drop-shadow-sm font-black' 
                        : 'bg-white bg-opacity-20 text-white border border-white border-opacity-30'
                    }`}
                  >
                    {index < streakData.weeklyProgress ? '‚úì' : day}
                  </motion.div>
                ))}
              </div>
            </div>
          </motion.div>

          {/* Progress Bar with Better Visibility */}
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ delay: 1.4 }}
            className="mb-4"
          >
            <div className="flex justify-between items-center mb-2">
              <span className="text-white text-sm font-medium">Ê¨°„ÅÆ„Éú„Éº„Éä„Çπ„Åæ„Åß</span>
              <span className="text-white text-sm font-bold">{streakData.daysToNextBonus}/10Êó•</span>
            </div>
            <div className="w-full bg-white bg-opacity-20 rounded-full h-3 shadow-inner">
              <motion.div
                initial={{ width: 0 }}
                animate={{ width: `${((10 - streakData.daysToNextBonus) / 10) * 100}%` }}
                transition={{ duration: 1.5, delay: 1.6 }}
                className="bg-gradient-to-r from-yellow-300 to-orange-400 h-3 rounded-full shadow-sm"
              />
            </div>
            <div className="text-center mt-2">
              <p className="text-orange-100 text-sm font-medium">
                „ÅÇ„Å®{streakData.daysToNextBonus}Êó•„Åß{streakData.nextBonus}„Éù„Ç§„É≥„ÉàÁç≤ÂæóÔºÅ
              </p>
            </div>
          </motion.div>

          {/* Enhanced Action Button */}
          <motion.button
            initial={{ opacity: 0, y: 5 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 1.8 }}
            whileHover={{ scale: 1.02, y: -2 }}
            whileTap={{ scale: 0.98 }}
            className="w-full bg-white text-orange-500 py-3 rounded-xl font-bold text-base shadow-lg hover:bg-orange-50 hover:shadow-xl transition-all duration-200 border-2 border-white border-opacity-30"
          >
            ‰ªäÊó•„ÇÇÂ≠¶Áøí„Åô„Çã
          </motion.button>
        </motion.div>

        {/* Corporate Event Quizzes - Authentic Instagram Stories Style */}
        <motion.div 
          variants={cardVariants}
          className="bg-white rounded-2xl p-6 shadow-lg border border-gray-100"
        >
          <div className="flex items-center justify-between mb-6">
            <h2 className="text-xl font-bold text-gray-900">üè¢ ‰ºÅÊ•≠„Ç§„Éô„É≥„Éà„ÇØ„Ç§„Ç∫</h2>
            <span className="text-sm text-gray-500">„Éë„Éº„Éà„Éä„Éº‰ºÅÊ•≠„Åã„Çâ„ÅÆÁâπÂà•„ÇØ„Ç§„Ç∫</span>
          </div>
          
          <div className="flex space-x-4 overflow-x-auto pb-4">
            {/* Your Story */}
            <motion.div
              whileHover={{ scale: 1.02 }}
              whileTap={{ scale: 0.98 }}
              className="flex-shrink-0 cursor-pointer group"
            >
              <div className="relative">
                {/* Story Ring - Orange to Purple Gradient */}
                <div className="w-16 h-16 rounded-full bg-gradient-to-br from-orange-400 to-purple-500 p-0.5 mb-2">
                  <div className="w-full h-full rounded-full bg-white p-1">
                    <div className="w-full h-full rounded-full bg-gray-200 flex items-center justify-center">
                      <div className="w-8 h-8 bg-gray-300 rounded-full flex items-center justify-center">
                        <span className="text-gray-600 text-lg">üë§</span>
                      </div>
                    </div>
                  </div>
                </div>
                <div className="text-center">
                  <p className="text-xs font-medium text-gray-900">Your Story</p>
                </div>
              </div>
            </motion.div>

            {/* Shops Story */}
            <motion.div
              whileHover={{ scale: 1.02 }}
              whileTap={{ scale: 0.98 }}
              className="flex-shrink-0 cursor-pointer group"
              onClick={() => handleStoryClick(corporateStories[0])}
            >
              <div className="relative">
                {/* Story Ring - Orange to Purple Gradient */}
                <div className="w-16 h-16 rounded-full bg-gradient-to-br from-orange-400 to-purple-500 p-0.5 mb-2">
                  <div className="w-full h-full rounded-full bg-white p-1">
                    <div className="w-full h-full rounded-full bg-gradient-to-br from-red-400 to-red-600 flex items-center justify-center relative">
                      {/* Red Cube with 'm' */}
                      <div className="w-6 h-6 bg-red-600 rounded-sm transform rotate-12 relative">
                        <div className="absolute inset-0 bg-red-500 rounded-sm"></div>
                        <div className="absolute inset-0 bg-red-400 rounded-sm transform translate-x-0.5 -translate-y-0.5"></div>
                        <span className="absolute inset-0 flex items-center justify-center text-white font-bold text-xs">m</span>
                      </div>
                      {/* Blue Circle */}
                      <div className="absolute -top-0.5 -right-0.5 w-3 h-3 bg-cyan-400 rounded-full"></div>
                    </div>
                  </div>
                </div>
                <div className="text-center">
                  <p className="text-xs font-medium text-gray-900">shops</p>
                </div>
                {/* New Badge */}
                <div className="absolute bottom-6 left-1/2 transform -translate-x-1/2 w-6 h-3 bg-pink-500 rounded-sm flex items-center justify-center">
                  <span className="text-white text-xs font-bold">NEW</span>
                </div>
              </div>
            </motion.div>

            {/* Rakuten Story */}
            <motion.div
              whileHover={{ scale: 1.02 }}
              whileTap={{ scale: 0.98 }}
              className="flex-shrink-0 cursor-pointer group"
              onClick={() => handleStoryClick(corporateStories[1])}
            >
              <div className="relative">
                {/* Story Ring - Purple Gradient */}
                <div className="w-16 h-16 rounded-full bg-gradient-to-br from-purple-400 to-purple-600 p-0.5 mb-2">
                  <div className="w-full h-full rounded-full bg-white p-1">
                    <div className="w-full h-full rounded-full bg-red-600 flex items-center justify-center">
                      <div className="text-center">
                        <div className="text-white font-bold text-xs">Rakuten</div>
                        <div className="w-6 h-0.5 bg-white rounded-full mt-1 transform rotate-12"></div>
                      </div>
                    </div>
                  </div>
                </div>
                <div className="text-center">
                  <p className="text-xs font-medium text-gray-900">rakuten</p>
                </div>
              </div>
            </motion.div>

            {/* Amazon Story */}
            <motion.div
              whileHover={{ scale: 1.02 }}
              whileTap={{ scale: 0.98 }}
              className="flex-shrink-0 cursor-pointer group"
              onClick={() => handleStoryClick(corporateStories[2])}
            >
              <div className="relative">
                {/* Story Ring - Orange to Purple Gradient */}
                <div className="w-16 h-16 rounded-full bg-gradient-to-br from-orange-400 to-purple-500 p-0.5 mb-2">
                  <div className="w-full h-full rounded-full bg-white p-1">
                    <div className="w-full h-full rounded-full bg-black flex items-center justify-center">
                      <div className="text-center">
                        <div className="text-gray-300 font-bold text-xs">amazon</div>
                        <div className="w-5 h-0.5 bg-orange-500 rounded-full mt-1 transform -rotate-6"></div>
                      </div>
                    </div>
                  </div>
                </div>
                <div className="text-center">
                  <p className="text-xs font-medium text-gray-900">amazon</p>
                </div>
              </div>
            </motion.div>

            {/* CA Story */}
            <motion.div
              whileHover={{ scale: 1.02 }}
              whileTap={{ scale: 0.98 }}
              className="flex-shrink-0 cursor-pointer group"
              onClick={() => handleStoryClick(corporateStories[3])}
            >
              <div className="relative">
                {/* Story Ring - Purple Gradient */}
                <div className="w-16 h-16 rounded-full bg-gradient-to-br from-purple-400 to-purple-600 p-0.5 mb-2">
                  <div className="w-full h-full rounded-full bg-white p-1">
                    <div className="w-full h-full rounded-full bg-gradient-to-br from-cyan-100 to-blue-100 flex items-center justify-center">
                      <div className="flex items-center">
                        <div className="w-5 h-5 bg-lime-400 rounded-full flex items-center justify-center text-white font-bold text-xs">C</div>
                        <div className="w-5 h-5 bg-green-700 rounded-full flex items-center justify-center text-white font-bold text-xs -ml-1">A</div>
                      </div>
                    </div>
                  </div>
                </div>
                <div className="text-center">
                  <p className="text-xs font-medium text-gray-900">ca_tech</p>
                </div>
                {/* Live Badge */}
                <div className="absolute bottom-6 left-1/2 transform -translate-x-1/2 w-6 h-3 bg-pink-500 rounded-sm flex items-center justify-center animate-pulse">
                  <span className="text-white text-xs font-bold">LIVE</span>
                </div>
              </div>
            </motion.div>

            {/* Add Story Button */}
            <motion.div
              whileHover={{ scale: 1.02 }}
              whileTap={{ scale: 0.98 }}
              className="flex-shrink-0 cursor-pointer group"
            >
              <div className="relative">
                <div className="w-16 h-16 rounded-full bg-gray-200 p-0.5 mb-2">
                  <div className="w-full h-full rounded-full bg-white p-1">
                    <div className="w-full h-full rounded-full bg-gray-100 flex items-center justify-center">
                      <div className="text-gray-400 text-xl">+</div>
                    </div>
                  </div>
                </div>
                <div className="text-center">
                  <p className="text-xs font-medium text-gray-500">ËøΩÂä†</p>
                </div>
              </div>
            </motion.div>
          </div>

          {/* Story Progress Indicators */}
          <div className="flex justify-center space-x-1 mt-4">
            <div className="w-8 h-1 bg-red-500 rounded-full"></div>
            <div className="w-8 h-1 bg-gray-300 rounded-full"></div>
            <div className="w-8 h-1 bg-gray-300 rounded-full"></div>
            <div className="w-8 h-1 bg-gray-300 rounded-full"></div>
          </div>
        </motion.div>

        {/* Available Quizzes */}
        <motion.div 
          variants={cardVariants}
          className="bg-white rounded-2xl shadow-lg p-6 border border-gray-100"
        >
          <div className="mb-6">
            <h2 className="text-2xl font-bold text-gray-900">üéØ „ÇØ„Ç§„Ç∫„Ç´„ÉÜ„Ç¥„É™</h2>
            <p className="text-gray-600 text-sm mt-1">ËààÂë≥„ÅÆ„ÅÇ„Çã„Ç´„ÉÜ„Ç¥„É™„ÇíÈÅ∏Êäû„Åó„Å¶„ÇØ„Ç§„Ç∫„Å´ÊåëÊà¶„Åó„Çà„ÅÜ</p>
          </div>
          
          {/* 2√ó2 „Ç∞„É™„ÉÉ„Éâ„É¨„Ç§„Ç¢„Ç¶„Éà */}
          <div className="grid grid-cols-2 gap-3 md:gap-4">
            {availableQuizzes.map((quiz, index) => (
              <motion.div
                key={quiz.title}
                initial={{ opacity: 0, scale: 0.9 }}
                animate={{ opacity: 1, scale: 1 }}
                transition={{ delay: 0.6 + index * 0.1 }}
                whileHover={{ scale: 1.03, y: -3 }}
                whileTap={{ scale: 0.97 }}
                className="group cursor-pointer"
              >
                <Link href={`/quiz?category=${encodeURIComponent(quiz.category)}`}>
                  <div className={`bg-gradient-to-br ${quiz.color} text-white rounded-xl p-3 md:p-6 shadow-lg transition-all duration-300 group-hover:shadow-xl border border-white/20 h-full aspect-square flex items-center justify-center`}>
                    <div className="flex flex-col justify-center items-center text-center space-y-2 md:space-y-3">
                      <h3 className="text-sm md:text-xl font-bold leading-tight px-1">{quiz.title}</h3>
                      
                      {/* „Ç∏„É£„É≥„É´Ë°®Á§∫ */}
                      <div className="flex flex-wrap gap-1 justify-center max-w-full">
                        {quiz.genres.slice(0, 2).map((genre, idx) => (
                          <span key={idx} className="text-xs bg-white/20 px-2 py-1 rounded-full whitespace-nowrap">
                            {genre}
                          </span>
                        ))}
                        {quiz.genres.length > 2 && (
                          <span className="text-xs bg-white/20 px-2 py-1 rounded-full">
                            +{quiz.genres.length - 2}
                          </span>
                        )}
                      </div>
                    </div>
                  </div>
                </Link>
              </motion.div>
            ))}
          </div>
          
          {/* „Ç´„ÉÜ„Ç¥„É™Áµ±Ë®à */}
          <div className="mt-6 pt-4 border-t border-gray-200">
            <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
              <div className="text-center">
                <div className="text-xl md:text-2xl font-bold text-blue-600">4</div>
                <div className="text-xs md:text-sm text-gray-600">„Ç´„ÉÜ„Ç¥„É™</div>
              </div>
              <div className="text-center">
                <div className="text-xl md:text-2xl font-bold text-green-600">23</div>
                <div className="text-xs md:text-sm text-gray-600">„Ç∏„É£„É≥„É´</div>
              </div>
              <div className="text-center">
                <div className="text-xl md:text-2xl font-bold text-purple-600">200+</div>
                <div className="text-xs md:text-sm text-gray-600">ÂïèÈ°åÊï∞</div>
              </div>
              <div className="text-center">
                <div className="text-xl md:text-2xl font-bold text-orange-600">3</div>
                <div className="text-xs md:text-sm text-gray-600">Èõ£ÊòìÂ∫¶</div>
              </div>
            </div>
          </div>
        </motion.div>

        {/* „ÇØ„Ç§„Ç∫Â±•Ê≠¥„Çª„ÇØ„Ç∑„Éß„É≥ */}
        <motion.div
          variants={cardVariants}
          className="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden"
        >
          {/* „Éò„ÉÉ„ÉÄ„Éº - „É¢„Éê„Ç§„É´ÊúÄÈÅ©Âåñ */}
          <div className="bg-gradient-to-r from-blue-500 to-purple-600 px-4 py-6">
            <div className="flex items-center justify-between">
              <div className="flex-1">
                <h2 className="text-xl font-bold text-white">üìö „ÇØ„Ç§„Ç∫Â±•Ê≠¥</h2>
                <p className="text-blue-100 text-sm mt-1">AI„ÅåËá™ÂãïÂàÜÈ°û„Åó„ÅüÂ≠¶ÁøíÂ±•Ê≠¥</p>
              </div>
              <div className="text-right">
                <div className="bg-white/20 backdrop-blur-sm rounded-full px-3 py-1">
                  <span className="text-white text-sm font-medium">AIÂàÜÊûêÊ∏à„Åø</span>
                </div>
                <div className="text-blue-100 text-xs mt-1">
                  ‰ø°È†ºÂ∫¶: {aiStats.averageConfidence}%
                </div>
              </div>
            </div>
          </div>

          <div className="p-4 space-y-4">
            {/* AIÂàÜÈ°ûÁµ±Ë®à - „É¢„Éê„Ç§„É´ÊúÄÈÅ©Âåñ */}
            <div className="grid grid-cols-2 gap-3">
              <div className="bg-gradient-to-br from-blue-50 to-blue-100 rounded-xl p-3 text-center">
                <div className="text-2xl font-bold text-blue-600">{aiStats.generalKnowledge}</div>
                <div className="text-xs text-blue-700 font-medium">‰∏ÄËà¨ÊïôÈ§ä</div>
              </div>
              <div className="bg-gradient-to-br from-purple-50 to-purple-100 rounded-xl p-3 text-center">
                <div className="text-2xl font-bold text-purple-600">{aiStats.specialized}</div>
                <div className="text-xs text-purple-700 font-medium">Â∞ÇÈñÄ</div>
              </div>
              <div className="bg-gradient-to-br from-green-50 to-green-100 rounded-xl p-3 text-center">
                <div className="text-2xl font-bold text-green-600">{aiStats.universal}</div>
                <div className="text-xs text-green-700 font-medium">ÊôÆÈÅçÁöÑ</div>
              </div>
              <div className="bg-gradient-to-br from-orange-50 to-orange-100 rounded-xl p-3 text-center">
                <div className="text-2xl font-bold text-orange-600">{aiStats.trend}</div>
                <div className="text-xs text-orange-700 font-medium">„Éà„É¨„É≥„Éâ</div>
              </div>
            </div>

            {/* „Éï„Ç£„É´„Çø„ÉºÂàá„ÇäÊõø„Åà„Éú„Çø„É≥ */}
            <motion.button
              onClick={() => setShowFilters(!showFilters)}
              className="w-full bg-gray-50 hover:bg-gray-100 rounded-xl p-4 flex items-center justify-between transition-colors"
              whileTap={{ scale: 0.98 }}
            >
              <div className="flex items-center space-x-3">
                <div className="w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center">
                  <svg className="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z" />
                  </svg>
                </div>
                <div className="text-left">
                  <div className="font-medium text-gray-900">„Éï„Ç£„É´„Çø„Éº</div>
                  <div className="text-xs text-gray-500">
                    {filteredHistory.length}‰ª∂ / {quizHistory.length}‰ª∂
                  </div>
                </div>
              </div>
              <motion.div
                animate={{ rotate: showFilters ? 180 : 0 }}
                transition={{ duration: 0.2 }}
              >
                <svg className="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
                </svg>
              </motion.div>
            </motion.button>

            {/* „Éï„Ç£„É´„Çø„Éº„Éë„Éç„É´ - „Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥‰ªò„Åç */}
            <motion.div
              initial={false}
              animate={{ 
                height: showFilters ? 'auto' : 0,
                opacity: showFilters ? 1 : 0
              }}
              transition={{ duration: 0.3, ease: "easeInOut" }}
              className="overflow-hidden"
            >
              <div className="space-y-4 pb-4">
                {/* „Ç´„ÉÜ„Ç¥„É™„Éï„Ç£„É´„Çø„Éº - „Çπ„ÇØ„É≠„Éº„É´ÂèØËÉΩ */}
                <div>
                  <h3 className="text-sm font-medium text-gray-700 mb-3">üìÇ „Ç´„ÉÜ„Ç¥„É™</h3>
                  <div className="flex space-x-2 overflow-x-auto pb-2">
                    {['all', '„Éì„Ç∏„Éç„Çπ', '„ÉÜ„ÇØ„Éé„É≠„Ç∏„Éº', 'Á§æ‰ºö„ÉªÊñáÂåñ', '„Éí„É•„Éº„Éû„É≥„Çπ„Ç≠„É´'].map((filter) => (
                      <motion.button
                        key={filter}
                        onClick={() => setHistoryFilter(filter)}
                        whileTap={{ scale: 0.95 }}
                        className={`flex-shrink-0 px-4 py-2 rounded-full text-sm font-medium transition-all ${
                          historyFilter === filter
                            ? 'bg-blue-500 text-white shadow-lg'
                            : 'bg-gray-100 text-gray-600 hover:bg-gray-200'
                        }`}
                      >
                        {filter === 'all' ? 'üåü „Åô„Åπ„Å¶' : filter}
                      </motion.button>
                    ))}
                  </div>
                </div>

                {/* AIÂàÜÈ°û„Éï„Ç£„É´„Çø„Éº - 2Âàó„É¨„Ç§„Ç¢„Ç¶„Éà */}
                <div className="grid grid-cols-1 gap-4">
                  <div>
                    <h4 className="text-sm font-medium text-gray-700 mb-2">üß† Áü•Ë≠ò„É¨„Éô„É´</h4>
                    <div className="flex space-x-2">
                      {['all', '‰∏ÄËà¨ÊïôÈ§ä', 'Â∞ÇÈñÄ'].map((filter) => (
                        <motion.button
                          key={filter}
                          onClick={() => setCategoryFilter(filter as any)}
                          whileTap={{ scale: 0.95 }}
                          className={`flex-1 px-3 py-2 rounded-xl text-sm font-medium transition-all ${
                            categoryFilter === filter
                              ? filter === '‰∏ÄËà¨ÊïôÈ§ä' 
                                ? 'bg-blue-500 text-white' 
                                : filter === 'Â∞ÇÈñÄ' 
                                ? 'bg-purple-500 text-white' 
                                : 'bg-gray-500 text-white'
                              : 'bg-gray-100 text-gray-600 hover:bg-gray-200'
                          }`}
                        >
                          {filter === 'all' ? '„Åô„Åπ„Å¶' : filter}
                        </motion.button>
                      ))}
                    </div>
                  </div>
                  <div>
                    <h4 className="text-sm font-medium text-gray-700 mb-2">‚è∞ ÊôÇ‰ª£ÊÄß</h4>
                    <div className="flex space-x-2">
                      {['all', 'ÊôÆÈÅçÁöÑ', '„Éà„É¨„É≥„Éâ'].map((filter) => (
                        <motion.button
                          key={filter}
                          onClick={() => setTypeFilter(filter as any)}
                          whileTap={{ scale: 0.95 }}
                          className={`flex-1 px-3 py-2 rounded-xl text-sm font-medium transition-all ${
                            typeFilter === filter
                              ? filter === 'ÊôÆÈÅçÁöÑ' 
                                ? 'bg-green-500 text-white' 
                                : filter === '„Éà„É¨„É≥„Éâ' 
                                ? 'bg-orange-500 text-white' 
                                : 'bg-gray-500 text-white'
                              : 'bg-gray-100 text-gray-600 hover:bg-gray-200'
                          }`}
                        >
                          {filter === 'all' ? '„Åô„Åπ„Å¶' : filter}
                        </motion.button>
                      ))}
                    </div>
                  </div>
                </div>

                {/* „Éï„Ç£„É´„Çø„Éº„É™„Çª„ÉÉ„Éà */}
                {(historyFilter !== 'all' || categoryFilter !== 'all' || typeFilter !== 'all') && (
                  <motion.button
                    onClick={() => {
                      setHistoryFilter('all');
                      setCategoryFilter('all');
                      setTypeFilter('all');
                    }}
                    whileTap={{ scale: 0.95 }}
                    className="w-full bg-red-50 hover:bg-red-100 text-red-600 py-2 rounded-xl text-sm font-medium transition-colors"
                  >
                    üîÑ „Éï„Ç£„É´„Çø„Éº„Çí„É™„Çª„ÉÉ„Éà
                  </motion.button>
                )}
              </div>
            </motion.div>

            {/* „ÇØ„Ç§„Ç∫Â±•Ê≠¥„É™„Çπ„Éà - „É¢„Éê„Ç§„É´ÊúÄÈÅ©Âåñ */}
            <div className="space-y-3">
              {filteredHistory.map((history, index) => (
                <motion.div
                  key={history.id}
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ delay: index * 0.1 }}
                  className="bg-gray-50 rounded-2xl overflow-hidden"
                >
                  {/* „Ç´„Éº„Éâ„Éò„ÉÉ„ÉÄ„Éº - „Çø„ÉÉ„ÉóÂèØËÉΩ */}
                  <motion.button
                    onClick={() => setExpandedHistory(expandedHistory === history.id ? null : history.id)}
                    className="w-full p-4 text-left"
                    whileTap={{ scale: 0.98 }}
                  >
                    <div className="flex items-center justify-between mb-3">
                      <div className="flex items-center space-x-2">
                        <div className="text-lg">
                          {history.category === '„ÉÜ„ÇØ„Éé„É≠„Ç∏„Éº' ? 'üöÄ' : 
                           history.category === '„Éì„Ç∏„Éç„Çπ' ? 'üíº' :
                           history.category === 'Á§æ‰ºö„ÉªÊñáÂåñ' ? 'üåç' : 'ü§ù'}
                        </div>
                        <div>
                          <div className="font-medium text-gray-900 text-sm">{history.category}</div>
                          <div className="text-xs text-gray-600">{history.genre}</div>
                        </div>
                      </div>
                      <div className="flex items-center space-x-2">
                        <div className={`px-3 py-1 rounded-full text-xs font-bold ${
                          history.score >= 80 ? 'bg-green-500 text-white' :
                          history.score >= 60 ? 'bg-yellow-500 text-white' :
                          'bg-red-500 text-white'
                        }`}>
                          {history.score}%
                        </div>
                        <motion.div
                          animate={{ rotate: expandedHistory === history.id ? 180 : 0 }}
                          transition={{ duration: 0.2 }}
                        >
                          <svg className="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
                          </svg>
                        </motion.div>
                      </div>
                    </div>

                    {/* AIÂàÜÈ°û„Éê„ÉÉ„Ç∏ */}
                    <div className="flex items-center justify-between">
                      <div className="flex items-center space-x-2">
                        <span className={`px-2 py-1 rounded-full text-xs font-medium ${
                          history.aiCategory === '‰∏ÄËà¨ÊïôÈ§ä' 
                            ? 'bg-blue-500 text-white' 
                            : 'bg-purple-500 text-white'
                        }`}>
                          {history.aiCategory}
                        </span>
                        <span className={`px-2 py-1 rounded-full text-xs font-medium ${
                          history.aiType === 'ÊôÆÈÅçÁöÑ' 
                            ? 'bg-green-500 text-white' 
                            : 'bg-orange-500 text-white'
                        }`}>
                          {history.aiType}
                        </span>
                        <div className="flex items-center space-x-1 text-xs text-gray-500">
                          <span>‚≠ê</span>
                          <span>{(history.confidence * 100).toFixed(0)}%</span>
                        </div>
                      </div>
                      <div className="text-xs text-gray-500">
                        {history.date} {history.time}
                      </div>
                    </div>
                  </motion.button>

                  {/* Â±ïÈñãÂèØËÉΩ„Å™Ë©≥Á¥∞ */}
                  <motion.div
                    initial={false}
                    animate={{ 
                      height: expandedHistory === history.id ? 'auto' : 0,
                      opacity: expandedHistory === history.id ? 1 : 0
                    }}
                    transition={{ duration: 0.3, ease: "easeInOut" }}
                    className="overflow-hidden"
                  >
                    <div className="px-4 pb-4 space-y-3">
                      <div className="h-px bg-gray-200"></div>
                      {history.questions.map((q, qIndex) => (
                        <div key={qIndex} className="bg-white rounded-xl p-3">
                          <div className="flex items-start space-x-3">
                            <div className={`w-6 h-6 rounded-full flex items-center justify-center text-xs font-bold flex-shrink-0 ${
                              q.isCorrect ? 'bg-green-500 text-white' : 'bg-red-500 text-white'
                            }`}>
                              {q.isCorrect ? '‚óã' : '√ó'}
                            </div>
                            <div className="flex-1 min-w-0">
                              <p className="text-sm font-medium text-gray-900 mb-2 leading-relaxed">{q.question}</p>
                              <div className={`px-3 py-2 rounded-lg ${
                                q.isCorrect 
                                  ? 'bg-green-50 border border-green-200' 
                                  : 'bg-red-50 border border-red-200'
                              }`}>
                                <div className={`text-xs font-medium ${
                                  q.isCorrect ? 'text-green-700' : 'text-red-700'
                                }`}>
                                  {q.isCorrect ? '‚úÖ Ê≠£Ëß£' : '‚ùå ‰∏çÊ≠£Ëß£'}
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      ))}
                      
                      {/* Âæ©Áøí„Ç¢„ÇØ„Ç∑„Éß„É≥„Éú„Çø„É≥ */}
                      <div className="flex space-x-2 pt-2">
                        <motion.button
                          whileTap={{ scale: 0.95 }}
                          className="flex-1 bg-blue-500 hover:bg-blue-600 text-white py-3 rounded-xl text-sm font-medium transition-colors"
                        >
                          üîÑ ÂÜçÊåëÊà¶
                        </motion.button>
                        <motion.button
                          whileTap={{ scale: 0.95 }}
                          className="flex-1 bg-gray-500 hover:bg-gray-600 text-white py-3 rounded-xl text-sm font-medium transition-colors"
                        >
                          üìö È°û‰ººÂïèÈ°å
                        </motion.button>
                      </div>
                    </div>
                  </motion.div>
                </motion.div>
              ))}
            </div>

            {/* Á©∫„ÅÆÁä∂ÊÖã - „É¢„Éê„Ç§„É´ÊúÄÈÅ©Âåñ */}
            {filteredHistory.length === 0 && (
              <div className="text-center py-12">
                <div className="text-6xl mb-4">ü§ñ</div>
                <h3 className="text-lg font-bold text-gray-900 mb-2">
                  Ë©≤ÂΩì„Åô„ÇãÂ±•Ê≠¥„Åå„ÅÇ„Çä„Åæ„Åõ„Çì
                </h3>
                <p className="text-gray-600 mb-6 text-sm leading-relaxed">
                  „Éï„Ç£„É´„Çø„Éº„ÇíÂ§âÊõ¥„Åô„Çã„Åã„ÄÅ<br />
                  Êñ∞„Åó„ÅÑ„ÇØ„Ç§„Ç∫„Å´ÊåëÊà¶„Åó„Å¶„Åø„Åæ„Åó„Çá„ÅÜÔºÅ
                </p>
                <motion.button
                  onClick={() => {
                    setHistoryFilter('all');
                    setCategoryFilter('all');
                    setTypeFilter('all');
                  }}
                  whileTap={{ scale: 0.95 }}
                  className="bg-blue-500 hover:bg-blue-600 text-white px-6 py-3 rounded-xl font-medium transition-colors"
                >
                  üîÑ „Éï„Ç£„É´„Çø„Éº„Çí„É™„Çª„ÉÉ„Éà
                </motion.button>
              </div>
            )}
          </div>
        </motion.div>

        {/* Corporate Story View */}
        <CorporateStoryView
          story={selectedStory}
          isOpen={isStoryOpen}
          onClose={handleCloseStory}
          onStartQuiz={handleStartQuiz}
        />
      </motion.div>
    </div>
  );
} 